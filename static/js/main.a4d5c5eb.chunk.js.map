{"version":3,"sources":["logo.svg","components/Webcam/Webcam.jsx","App.js","reportWebVitals.js","index.js"],"names":["constraints","height","width","facingMode","WebcamCapture","webcamRef","useRef","useState","videoConstraints","setVideoConstraints","useEffect","navigator","permissions","query","name","then","permissionObj","state","console","log","catch","error","ref","audio","screenshotQuality","forceScreenshotSourceSize","screenshotFormat","onClick","e","preventDefault","App","className","Webcam","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,I,kDCGTA,EAAc,CAClBC,OAAQ,KACRC,MAAO,KACPC,WAAY,eAsDCC,EAlDO,WAEpB,IAAMC,EAAYC,iBAAO,MACzB,EAAgDC,mBAASP,GAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KAkBA,OAhBAC,qBAAU,WACJC,UAAUC,aAAeD,UAAUC,YAAYC,OACjDF,UAAUC,YACPC,MAAM,CAACC,KAAM,WACbC,MAAK,SAACC,GACDA,EAAcC,MAGlBC,QAAQC,IAAIH,EAAcC,UAE3BG,OAAM,SAACC,GACNH,QAAQC,IAAI,cAAeE,QAGhC,IAGD,qCACE,cAAC,IAAD,CAEEC,IAAKjB,EACLkB,OAAO,EACPC,kBAAmB,EACnBC,2BAAyB,EAEzBC,iBAAiB,aACjBlB,iBAAkBA,EAClBP,OAAO,QACPC,MAAM,UAGR,wBAAQyB,QAAS,SAAAC,GACfA,EAAEC,iBACoC,gBAAnCpB,EAAoBN,WACrBM,EAAoB,2BAAID,GAAL,IAAuBL,WAAY,UAGtDM,EAAoB,2BAAID,GAAL,IAAuBL,WAAY,kBAN1D,2BASA,uCC1CS2B,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACC,cAACC,EAAD,OCIUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a4d5c5eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useRef, useState} from 'react';\nimport Webcam from \"react-webcam\";\n\nconst constraints = {\n  height: 1080, //set pic resolution\n  width: 1920, //set pic resolution\n  facingMode: \"environment\" //use back camera\n  // facingMode: \"user\" //use front camera\n};\n\nconst WebcamCapture = () => {\n\n  const webcamRef = useRef(null);\n  const [videoConstraints, setVideoConstraints] = useState(constraints);\n\n  useEffect(() => {\n    if (navigator.permissions && navigator.permissions.query) {\n      navigator.permissions\n        .query({name: \"camera\"})\n        .then((permissionObj) => {\n          if (permissionObj.state !== \"granted\") {\n            // Show how to grant accress right to browser\n          }\n          console.log(permissionObj.state);\n        })\n        .catch((error) => {\n          console.log(\"Got error :\", error);\n        });\n    }\n  }, [])\n\n  return (\n    <>\n      <Webcam\n        //https://www.npmjs.com/package/react-webcam\n        ref={webcamRef}\n        audio={false}\n        screenshotQuality={1} // set the Quality of camera (0-1)\n        forceScreenshotSourceSize\n        // screenshotFormat=\"image/png\"\n        screenshotFormat=\"image/jpeg\"\n        videoConstraints={videoConstraints} //cameraSetting,eg:resolution, use which camera\n        height=\"400px\" // size of displaying screen\n        width=\"400px\" // size of displaying screen\n        // onUserMedia={(e) => console.log(e)} // show info of media stream\n      />\n      <button onClick={e => {\n        e.preventDefault();\n        if(setVideoConstraints.facingMode === \"environment\"){\n          setVideoConstraints({...videoConstraints, facingMode: \"user\"});\n        }\n        else {\n          setVideoConstraints({...videoConstraints, facingMode: \"environment\"});\n        }\n      }}>Change camera</button>\n      <h1>3</h1>\n    </>\n  );\n}\n\nexport default WebcamCapture;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home/Home'\nimport Footer from './components/Footer'\nimport WebcamCapture from \"./components/Webcam/Webcam\";\nfunction App() {\n  return (\n    <div className=\"App\">\n     <WebcamCapture/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}